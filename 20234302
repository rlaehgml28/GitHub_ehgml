import csv

f = open('/content/earthquake.csv')
data = csv.reader(f)
header = next(data)
header = next(data)
for row in data:
  print(row)
f.cloes()

import pandas as pd

eq = pd.read_csv('/content/earthquake.csv')
eq

eq.dropna(axis=0, how='all', inplace=True)
eq

import pandas as pd
import matplotlib.pyplot as plt

eq = pd.read_csv('/content/earthquake.csv', index_col = 0)
eq['규모'].plot(kind = 'hist', bins=10, title = 'Earthquake Magnitude Frequency', xlabel = 'size')

def earthquake_evacuation(location):
    if location == "집":
        print("1. 가까운 안전한 곳으로 빠르게 이동하세요.")
        print("2. 가스 및 전기 등을 끄세요.")
        print("3. 가까운 테이블이나 책장 아래로 숨어 안전을 유지하세요.")

    elif location == "회사":
        print("1. 책상 아래로 몸을 숨기거나 안전한 구조물 옆으로 이동하세요.")
        print("2. 계단 대신 엘리베이터를 이용하지 말고 계단으로 대피하세요.")
        print("3. 출구로 나가면서 다른 직원들과 함께 대피하세요.")

    elif location == "공원":
        print("1. 높은 건물이나 나무 밑으로 피하는 것을 피하세요.")
        print("2. 떨어지는 물체에 주의하며 열린 공간으로 대피하세요.")
        print("3. 가까운 안전한 장소로 빠르게 이동하세요.")

    elif location == "해안가":
        print("1. 지진해일이 올 수도 있으니 빨리 해안에서 멀리 떨어진 곳으로 이동하세요. ")
        print("2. 지진해일 특보가 발령되면 긴급 대피장소나 높은 곳으로 대피하세요. ")
        print("3. 지진해일 특보가 해제될 때까지 낮은 곳으로 가지 마세요.")

    else:
        print("해당하는 장소의 대피 요령이 없습니다.")

# 사용자로부터 대피할 장소 입력 받기
user_location = input("대피할 장소를 입력하세요 (집, 회사, 공원, 해안가 등): ")

# 대피 요령 출력
earthquake_evacuation(user_location)

def earthquake_evacuation(location):
    if location == "집":
        print("1. 가까운 안전한 곳으로 빠르게 이동하세요.")
        print("2. 가스 및 전기 등을 끄세요.")
        print("3. 가까운 테이블이나 책장 아래로 숨어 안전을 유지하세요.")

    elif location == "회사":
        print("1. 책상 아래로 몸을 숨기거나 안전한 구조물 옆으로 이동하세요.")
        print("2. 계단 대신 엘리베이터를 이용하지 말고 계단으로 대피하세요.")
        print("3. 출구로 나가면서 다른 직원들과 함께 대피하세요.")

    elif location == "공원":
        print("1. 높은 건물이나 나무 밑으로 피하는 것을 피하세요.")
        print("2. 떨어지는 물체에 주의하며 열린 공간으로 대피하세요.")
        print("3. 가까운 안전한 장소로 빠르게 이동하세요.")

    elif location == "해안가":
        print("1. 지진해일이 올 수도 있으니 빨리 해안에서 멀리 떨어진 곳으로 이동하세요. ")
        print("2. 지진해일 특보가 발령되면 긴급 대피장소나 높은 곳으로 대피하세요. ")
        print("3. 지진해일 특보가 해제될 때까지 낮은 곳으로 가지 마세요.")

    else:
        print("해당하는 장소의 대피 요령이 없습니다.")

# 사용자로부터 대피할 장소 입력 받기
user_location = input("대피할 장소를 입력하세요 (집, 회사, 공원, 해안가 등): ")

# 대피 요령 출력
earthquake_evacuation(user_location)

import matplotlib.pyplot as plt
import matplotlib.font_manager as fm

# 나눔 폰트 경로 설정
font_path = '/usr/share/fonts/truetype/nanum/NanumGothic.ttf'
font_name = fm.FontProperties(fname=font_path, size=18).get_name()
plt.rc('font', family=font_name)
plt.rcParams['font.family'] = 'NanumGothic'

# 캐시 재구성
!fc-cache -fv

!apt-get install -y fonts-nanum
!fc-cache -fv
!rm ~/.cache/matplotlib -rf

#기본 폰트 패밀리를 설정
plt.rcParams['font.family'] = 'NanumGothic'
plt.rcParams['font.family'] = 'Malgun Gothic'
plt.rcParams['font.size'] = 12
plt.rcParams['axes.unicode_minus'] = False


# 폰트 경로 설정
font_path = '/usr/share/fonts/truetype/nanum/NanumGothic.ttf'
font_prop = font_manager.FontProperties(fname=font_path)

# 폰트 속성 설정
plt.rcParams['font.family'] = font_prop.get_name()
plt.rcParams['font.size'] = 12

#x축,y축 입력
years = [2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023]
earthquake_counts = [7, 9, 19, 15, 5, 8, 4, 3, 6, 13]

# 그래프 생성
plt.figure(figsize=(10, 6))
plt.title('연도별 지진 발생 빈도', fontsize=16)
plt.plot(years, earthquake_counts, marker='o', label='지진 빈도')
plt.xlabel("년도", fontsize=12)
plt.ylabel("빈도", fontsize=12)
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()

from matplotlib import font_manager as fm, rc
import matplotlib.pyplot as plt

# 나눔고딕 폰트 경로 설정
font_path = '/usr/share/fonts/truetype/nanum/NanumGothic.ttf'
font_prop = fm.FontProperties(fname=font_path, size=18)
font_name = font_prop.get_name()
plt.rc('font', family=font_name)

# 폰트 속성 설정
plt.rcParams['font.size'] = 10
plt.rcParams['axes.unicode_minus'] = False

locations = ['경북 경주시', '충남 태안군', '전남 신안군 흑산도', '강원 동해시', '인천 강화군', '경북 김천시', '충북 괴산군', '북한 강원 원산', '전남 여수시', '경북 영덕군', '경남 진주시', '경남 밀양시', '경남 창녕군', '북한 강원 평강', '전남 해남군', '경북 상주시', '경남 밀양시', '경남 창녕군', '북한 강원 평강', '북한 황해북도 송림', '북한 평안남도 양덕', '경북 울진군', '강원 동해시', '경북 포항시', '인천 옹진군', '경북 영덕군', '전남 신안군 흑산도', '북한 황해남도 용연', '경북 포항']
sizes = [3.0, 3.5, 4.0, 4.5, 5.0, 5.5, 4.2, 4.8, 3.9, 5.2, 4.4, 4.7, 5.1, 4.3, 4.6, 3.8, 5.4, 4.9, 3.7, 5.3, 4.1, 4.9, 3.8, 5.0, 4.6, 4.2, 5.1, 4.7, 4.4, 3.9]

# 3.0 이상의 규모가 많이 발생하는 지역 선택
selected_locations = [location for location, size in zip(locations, sizes) if size >= 3.0]

# 선택된 지역의 데이터 추출
selected_sizes = [size for size in sizes if size >= 3.0]

# 그래프 그리기
plt.bar(range(len(selected_sizes)), selected_sizes, color='skyblue')
plt.title("3.0 이상 규모가 많이 발생하는 지역")
plt.ylabel("규모")
plt.xticks(range(len(selected_locations)), selected_locations, rotation='vertical')
plt.show()
